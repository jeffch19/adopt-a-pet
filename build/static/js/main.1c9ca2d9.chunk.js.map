{"version":3,"sources":["api/petfinder/index.js","components/hero/index.js","components/pet/index.js","pages/home/index.js","pages/search/index.js","pages/detail/index.js","pages/petDetailsNotFound/index.js","assets/logo.svg","components/search/index.js","components/navigation/index.js","App.js","reportWebVitals.js","index.js","mocks/handlers.js","mocks/browser.js"],"names":["getPets","async","type","arguments","length","undefined","query","searchParams","URLSearchParams","requestUrl","toString","response","fetch","method","json","Hero","_ref","image","displayText","_jsx","className","style","backgroundImage","backgroundBlendMode","backgroundSize","backgroundColor","children","getHeroTitle","Pet","_animal$photos$","animal","href","toLowerCase","id","_jsxs","src","photos","medium","alt","name","breeds","primary","colors","gender","HomePage","data","setData","useState","useParams","useEffect","petsData","getPetsData","map","Link","to","SearchPage","search","useLocation","queryParams","useMemo","pets","setPets","petNameToFind","get","pet","PetDetailsPage","_data$photos$","_data$photos$2","loading","setLoading","error","setError","getPetDetails","e","Redirect","full","description","PetDetailsNotFound","history","useHistory","onClick","goBack","Search","searchInputRef","useRef","onSubmit","preventDefault","searchQuery","current","value","push","ref","Navigation","petTypes","setPetTypes","types","getPetTypes","getPetTypesData","Logo","NavLink","activeClassName","exact","_links","self","split","pop","App","Router","Switch","Route","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","worker","require","start","ReactDOM","render","React","StrictMode","document","getElementById","handlers","rest","_req","res","ctx","status","req","url","animals","filter","contact","address","state","includes","params","details","setupWorker"],"mappings":"o8vIAAO,MAAMA,EAAUC,iBAAkC,IAA3BC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAKH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC/C,MAAMI,EAAe,IAAIC,gBAAgB,CAAEN,OAAMI,UAC3CG,EAAa,YAAYF,EAAaG,aAEtCC,QAAiBC,MAAMH,EAAY,CACvCI,OAAQ,QAGJC,QAAaH,EAASG,OAE5B,OAAOA,G,WCaMC,MArBFC,IAA6B,IAA5B,MAAEC,EAAK,YAAEC,GAAaF,EAGlC,OACEG,cAAA,OACEC,UAAU,iBACVC,MAAO,CACLC,gBAAiB,uCACfL,GAAS,gCAGXM,oBAAqB,aACrBC,eAAgB,QAChBC,gBAAiB,aACjBC,SAEFP,cAAA,MAAAO,SAAKR,GAAeS,EAfX,SAsBf,MAAMA,EAAgBzB,IACpB,OAAQA,GACN,IAAK,MACH,MAAO,OACT,IAAK,MACH,MAAO,OACT,IAAK,SACH,MAAO,UACT,IAAK,OACH,MAAO,QACT,QACE,MAAO,0BCNE0B,MA5BHZ,IAAiB,IAADa,EAAA,IAAf,OAAEC,GAAQd,EACrB,OACEG,cAAA,KAEEY,KAAM,IAAID,EAAO5B,KAAK8B,iBAAiBF,EAAOG,KAC9Cb,UAAU,MAAKM,SAEfQ,eAAA,WAAAR,SAAA,CACEP,cAAA,OAAKC,UAAU,sBAAqBM,SAEhCP,cAAA,OACEC,UAAU,YACVe,KACkB,QAAhBN,EAAAC,EAAOM,OAAO,UAAE,IAAAP,OAAA,EAAhBA,EAAkBQ,SAAU,kCAE9BC,IAAI,OAIVnB,cAAA,MAAAO,SAAKI,EAAOS,OACZL,eAAA,KAAAR,SAAA,CAAG,UAAQI,EAAOU,OAAOC,WACzBP,eAAA,KAAAR,SAAA,CAAG,UAAQI,EAAOY,OAAOD,WACzBP,eAAA,KAAAR,SAAA,CAAG,WAASI,EAAOa,cAnBhBb,EAAOG,K,cC+DHW,MA7DEA,KACf,MAAOC,EAAMC,GAAWC,mBAAS,OAC3B,KAAE7C,GAAS8C,cAWjB,OATAC,qBAAU,MACRhD,iBACE,MAAMiD,QAAiBlD,EAAQE,GAC/B4C,EAAQI,GAGVC,KACC,CAACjD,IAEC2C,EAKHX,eAAA,OAAKd,UAAU,OAAMM,SAAA,CACnBP,cAACJ,EAAI,IACLmB,eAAA,MAAAR,SAAA,CACEP,cAAA,QAAMC,UAAU,iBAAgBM,SAAExB,EAAO,GAAGA,KAAU,SAAe,IAAI,qCAI1E2C,EAAKzC,OACJe,cAAA,OAAKC,UAAU,OAAMM,SAClBmB,EAAKO,KAAKtB,IAAM,IAAAD,EAAA,OACfV,cAACkC,IAAI,CAEHC,GAAI,IAAIxB,EAAO5B,KAAK8B,iBAAiBF,EAAOG,KAC5Cb,UAAU,MAAKM,SAEfQ,eAAA,WAAAR,SAAA,CACEP,cAAA,OAAKC,UAAU,sBAAqBM,SAEhCP,cAAA,OACEC,UAAU,YACVe,KACkB,QAAhBN,EAAAC,EAAOM,OAAO,UAAE,IAAAP,OAAA,EAAhBA,EAAkBQ,SAClB,sBAEFC,IAAI,OAIVnB,cAAA,MAAAO,SAAKI,EAAOS,OACZL,eAAA,KAAAR,SAAA,CAAG,UAAQI,EAAOU,OAAOC,WACzBP,eAAA,KAAAR,SAAA,CAAG,UAAQI,EAAOY,OAAOD,WACzBP,eAAA,KAAAR,SAAA,CAAG,WAASI,EAAOa,cApBhBb,EAAOG,SA0BlBC,eAAA,KAAGd,UAAU,SAAQM,SAAA,CAAC,MAAIxB,EAAK,sCAzC5BiB,cAAA,MAAAO,SAAI,gBC0BA6B,MAvCIA,KAGjB,MAAM,OAAEC,GAAWC,cAEbC,EAAcC,mBAAQ,IACnB,IAAInD,gBAAgBgD,IAC1B,CAACA,KAEGI,EAAMC,GAAWd,mBAAS,IAajC,OAXAE,qBAAU,MACRhD,iBACE,MAAM6D,EAAgBJ,EAAYK,IAAI,QAChCb,QAAiBlD,EAAQ,GAAI8D,GAEnCD,EAAQX,GAGVC,KACC,CAACO,IAGFxB,eAAA,OAAKd,UAAU,OAAMM,SAAA,CACnBP,cAACJ,EAAI,CAACG,YAAa,eAAewC,EAAYK,IAAI,YAElD5C,cAAA,MAAAO,SAAI,yCAEJP,cAAA,QAAAO,SACEP,cAAA,OAAKC,UAAU,OAAMM,SAClBkC,EAAKR,KAAKY,GACT7C,cAACS,EAAG,CAACE,OAAQkC,GAAUA,EAAI/B,cC0BxBgC,MA5DQA,KAAO,IAADC,EAAAC,EAC3B,MAAOtB,EAAMC,GAAWC,sBACjBqB,EAASC,GAActB,oBAAS,IAChCuB,EAAOC,GAAYxB,oBAAS,IAC7B,GAAEd,GAAOe,cAiBf,OAfAC,qBAAU,MACRhD,iBACE,IACE,MAAMiD,OLDejD,WAC3B,MAAMQ,EAAa,YAAYwB,IACzBtB,QAAiBC,MAAMH,EAAY,CACvCI,OAAQ,QAKV,aAFmBF,EAASG,QKLC0D,CAAcvC,GACrCa,EAAQI,GACRqB,GAAS,GACT,MAAOE,GACPF,GAAS,GAEXF,GAAW,GAGblB,KACC,CAAClB,IAGFd,cAAA,OAAAO,SACG0C,EACCjD,cAAA,MAAAO,SAAI,eACF4C,EACFnD,cAAA,OAAAO,SACEP,cAACuD,IAAQ,CAACpB,GAAG,6BAGfpB,eAAA,QAAAR,SAAA,CACEP,cAACJ,EAAI,CACHE,OAAqB,QAAdiD,EAAArB,EAAKT,OAAO,UAAE,IAAA8B,OAAA,EAAdA,EAAgBS,OAAQ,kCAC/BzD,YAAa,QAAQ2B,EAAKN,SAE5BL,eAAA,OAAKd,UAAU,aAAYM,SAAA,CACzBP,cAAA,OAAKC,UAAU,sBAAqBM,SAClCP,cAAA,OACEC,UAAU,YACVe,KACgB,QAAdgC,EAAAtB,EAAKT,OAAO,UAAE,IAAA+B,OAAA,EAAdA,EAAgB9B,SAAU,kCAE5BC,IAAI,OAGRJ,eAAA,OAAAR,SAAA,CACEP,cAAA,MAAAO,SAAKmB,EAAKN,OACVL,eAAA,MAAAR,SAAA,CAAI,UAAQmB,EAAKL,OAAOC,WACxBP,eAAA,KAAAR,SAAA,CAAG,UAAQmB,EAAKH,OAAOD,SAAW,aAClCP,eAAA,KAAAR,SAAA,CAAG,WAASmB,EAAKF,UACjBxB,cAAA,MAAAO,SAAI,gBACJP,cAAA,KAAAO,SAAImB,EAAK+B,0BCxBRC,MA3BYA,KAGzB,MAAMC,EAAUC,cAOhB,OACE7C,eAAA,QAAMd,UAAU,OAAMM,SAAA,CACpBP,cAAA,MAAAO,SAAI,+BACJP,cAAA,KAAAO,SAAG,qGACHP,cAAA,OACEgB,IAAI,2EACJG,IAAI,KAENnB,cAAA,OAAKC,UAAU,oBAAmBM,SAChCP,cAAA,UAAQC,UAAU,SAAS4D,QAdlBC,KAEbH,EAAQG,UAYuCvD,SAAC,kBCxBrC,MAA0B,iCCkC1BwD,MA5BAA,KAGb,MAAMJ,EAAUC,cAEVI,EAAiBC,mBAavB,OACElD,eAAA,QAAMmD,SAZiBZ,IACvBA,EAAEa,iBAEF,MAAMC,EAAc,IAAI/E,gBAAgB,CACtC+B,KAAM4C,EAAeK,QAAQC,QAC5B/E,WAGHoE,EAAQY,KAAK,WAAaH,IAIOnE,UAAU,cAAaM,SAAA,CACtDP,cAAA,SAAOjB,KAAK,OAAOkB,UAAU,SAASuE,IAAKR,IAC3ChE,cAAA,UAAQjB,KAAK,SAASkB,UAAU,gBAAeM,SAAC,qBC6BvCkE,MAlDIA,KACjB,MAAOC,EAAUC,GAAe/C,mBAAS,IAWzC,OATAE,qBAAU,MACRhD,iBACE,MAAM,MAAE8F,QTaa9F,WACzB,MACMU,QAAiBC,MADJ,SACsB,CACvCC,OAAQ,QAKV,aAFmBF,EAASG,QSnBAkF,GACxBF,EAAYC,GAGdE,KACC,IAGD/D,eAAA,OAAAR,SAAA,CACEQ,eAAA,OAAKd,UAAU,WAAUM,SAAA,CACvBP,cAAA,OAAKgB,IAAK+D,EAAM5D,IAAI,aACpBnB,cAAC+D,EAAM,OAEThD,eAAA,MAAId,UAAU,YAAWM,SAAA,CACvBP,cAAA,MAAAO,SAEEP,cAACgF,IAAO,CACN7C,GAAG,IACHlC,UAAU,WACVgF,gBAAgB,kBAChBC,OAAK,EAAA3E,SACN,cAPK,OAWPmE,EACGA,EAASzC,KAAKlD,GACZgC,eAAA,MAAAR,SAAA,CAEEQ,eAACiE,IAAO,CACN7C,GAAI,IAAIpD,EAAKoG,OAAOC,KAAKxE,KAAKyE,MAAM,KAAKC,QAEzCrF,UAAU,WACVgF,gBAAgB,kBAAiB1E,SAAA,CAEhCxB,EAAKqC,KAAK,MAJNrC,EAAKqC,MAKD,MATJrC,EAAKqC,QAYhB,oBCnBGmE,MAxBf,WACE,OACEvF,cAACwF,IAAM,CAAAjF,SACLQ,eAAA,OAAAR,SAAA,CACEP,cAACyE,EAAU,IACX1D,eAAC0E,IAAM,CAAAlF,SAAA,CACLP,cAAC0F,IAAK,CAACC,KAAK,yBAAwBpF,SAClCP,cAAC0D,EAAkB,MAErB1D,cAAC0F,IAAK,CAACC,KAAK,UAASpF,SACnBP,cAACoC,EAAU,MAEbpC,cAAC0F,IAAK,CAACC,KAAK,aAAYpF,SACtBP,cAAC8C,EAAc,MAEjB9C,cAAC0F,IAAK,CAACC,KAAK,UAASpF,SACnBP,cAACyB,EAAQ,eCXNmE,MAZUC,IACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAKlG,IAAkD,IAAjD,OAAEmG,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASvG,EACpEmG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFd,MAAM,OAAEQ,GAAWC,EAAQ,IAC3BD,EAAOE,QAEPC,IAASC,OACPzG,cAAC0G,IAAMC,WAAU,CAAApG,SACfP,cAACuF,EAAG,MAENqB,SAASC,eAAe,SAM1BjB,K,0HCbO,MAAMkB,EAAW,CACtBC,IAAKnE,IAAI,UAAU,CAACoE,EAAMC,EAAKC,IACtBD,EAAIC,EAAIC,OAAO,KAAMD,EAAIvH,KAAKiF,MAEvCmC,IAAKnE,IAAI,YAAY,CAACwE,EAAKH,EAAKC,KAC9B,MAAMnI,EAAOqI,EAAIC,IAAIjI,aAAawD,IAAI,QAChCzD,EAAQiI,EAAIC,IAAIjI,aAAawD,IAAI,SACvC,IAAIpD,EAAW8H,EAAQA,QAgBvB,MAda,KAATvI,IACFS,EAAWA,EAAS+H,QACjB5G,GAAWA,EAAO5B,KAAK8B,gBAAkB9B,EAAK8B,iBAGrC,KAAV1B,IACFK,EAAWA,EAAS+H,QACjB5G,GACCA,EAAO6G,QAAQC,QAAQC,MACpB7G,cACA8G,SAASxI,EAAM0B,gBAClBF,EAAOS,KAAKP,cAAc8G,SAASxI,EAAM0B,kBAGxCoG,EAAIC,EAAIC,OAAO,KAAMD,EAAIvH,KAAKH,OAEvCuH,IAAKnE,IAAI,gBAAgB,CAACwE,EAAKH,EAAKC,KAClC,MAAM,GAAEpG,GAAOsG,EAAIQ,OACnB,IAAIpI,EAAWqI,EAAQ/G,GAEvB,OAAKtB,EAIEyH,EAAIC,EAAIC,OAAO,KAAMD,EAAIvH,KAAKH,IAH5ByH,EAAIC,EAAIC,OAAO,UChCfd,EAASyB,eAAehB,K","file":"static/js/main.1c9ca2d9.chunk.js","sourcesContent":["export const getPets = async (type = '', query = '') => {\n  const searchParams = new URLSearchParams({ type, query });\n  const requestUrl = `/animals?${searchParams.toString()}`;\n\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getPetDetails = async (id) => {\n  const requestUrl = `/animals/${id}`;\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getPetTypes = async () => {\n  const requestUrl = `/types`;\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n","import React from 'react';\n\nconst Hero = ({ image, displayText }) => {\n  const type = ''\n\n  return (\n    <div\n      className=\"hero-container\"\n      style={{\n        backgroundImage: `linear-gradient(black, black), url(\"${\n          image || 'pets-hero.png'\n        }\")\n          `,\n        backgroundBlendMode: 'saturation',\n        backgroundSize: 'cover',\n        backgroundColor: '#0000008f'\n      }}\n    >\n      <h2>{displayText || getHeroTitle(type)}</h2>\n    </div>\n  );\n};\n\nexport default Hero;\n\nconst getHeroTitle = (type) => {\n  switch (type) {\n    case 'dog':\n      return 'Dogs';\n    case 'cat':\n      return 'Cats';\n    case 'rabbit':\n      return 'Rabbits';\n    case 'bird':\n      return 'Birds';\n    default:\n      return 'Find your perfect pet';\n  }\n};\n","import React from 'react';\n\nconst Pet = ({ animal }) => {\n  return (\n    <a\n      key={animal.id}\n      href={`/${animal.type.toLowerCase()}/${animal.id}`}\n      className=\"pet\"\n    >\n      <article>\n        <div className=\"pet-image-container\">\n          {\n            <img\n              className=\"pet-image\"\n              src={\n                animal.photos[0]?.medium || 'https://i.imgur.com/aEcJUFK.png'\n              }\n              alt=\"\"\n            />\n          }\n        </div>\n        <h3>{animal.name}</h3>\n        <p>Breed: {animal.breeds.primary}</p>\n        <p>Color: {animal.colors.primary}</p>\n        <p>Gender: {animal.gender}</p>\n      </article>\n    </a>\n  );\n};\n\nexport default Pet;\n","import React, { useEffect, useState } from 'react';\nimport { getPets } from '../../api/petfinder';\nimport Hero from '../../components/hero';\nimport Pet from '../../components/pet';\nimport { useParams } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\n\nconst HomePage = () => {\n  const [data, setData] = useState(null);\n  const { type } = useParams(); // Fix me!\n\n  useEffect(() => {\n    async function getPetsData() {\n      const petsData = await getPets(type);\n      setData(petsData);\n    }\n\n    getPetsData();\n  }, [type]);\n\n  if (!data) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <div className=\"page\">\n      <Hero />\n      <h3>\n        <span className=\"pet-type-label\">{type ? `${type}s` : 'Pets'}</span>{' '}\n        available for adoption near you\n      </h3>\n\n      {data.length ? (\n        <div className=\"grid\">\n          {data.map((animal) => (\n            <Link\n              key={animal.id}\n              to={`/${animal.type.toLowerCase()}/${animal.id}`}\n              className=\"pet\"\n            >\n              <article>\n                <div className=\"pet-image-container\">\n                  {\n                    <img\n                      className=\"pet-image\"\n                      src={\n                        animal.photos[0]?.medium ||\n                        '/missing-animal.png'\n                      }\n                      alt=\"\"\n                    />\n                  }\n                </div>\n                <h3>{animal.name}</h3>\n                <p>Breed: {animal.breeds.primary}</p>\n                <p>Color: {animal.colors.primary}</p>\n                <p>Gender: {animal.gender}</p>\n              </article>\n            </Link> \n          ))}\n        </div>\n      ) : (\n        <p className=\"prompt\">No {type}s available for adoption now.</p>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport Hero from '../../components/hero';\nimport { getPets } from '../../api/petfinder';\nimport Pet from '../../components/pet';\n\n// import useLocation here\nimport { useLocation } from 'react-router-dom';\n\nconst SearchPage = () => {\n\n  // Get the search value from useLocation() here\n  const { search } = useLocation();\n\n  const queryParams = useMemo(() => { \n    return new URLSearchParams(search);\n  }, [search]);\n\n  const [pets, setPets] = useState([]);\n\n  useEffect(() => {\n    async function getPetsData() {\n      const petNameToFind = queryParams.get('name');\n      const petsData = await getPets('', petNameToFind);\n\n      setPets(petsData);\n    }\n\n    getPetsData();\n  }, [queryParams]);\n\n  return (\n    <div className=\"page\">\n      <Hero displayText={`Results for ${queryParams.get('name')}`} />\n\n      <h3>Pets available for adoption near you</h3>\n\n      <main>\n        <div className=\"grid\">\n          {pets.map((pet) => (\n            <Pet animal={pet} key={pet.id} />\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default SearchPage;\n","import React, { useEffect, useState } from 'react';\nimport { getPetDetails } from '../../api/petfinder';\nimport Hero from '../../components/hero';\nimport { useParams, Redirect } from 'react-router-dom';\n\nconst PetDetailsPage = () => {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const { id } = useParams(); // <--- Update me!\n\n  useEffect(() => {\n    async function getPetsData() {\n      try {\n        const petsData = await getPetDetails(id);\n        setData(petsData);\n        setError(false);\n      } catch (e) {\n        setError(true);\n      }\n      setLoading(false);\n    }\n\n    getPetsData();\n  }, [id]);\n\n  return (\n    <div>\n      {loading ? (\n        <h3>Loading...</h3>\n      ) : error ? (\n        <div>\n          <Redirect to=\"/pet-details-not-found\" />\n        </div>\n      ) : (\n        <main>\n          <Hero\n            image={data.photos[1]?.full || 'https://i.imgur.com/aEcJUFK.png'}\n            displayText={`Meet ${data.name}`}\n          />\n          <div className=\"pet-detail\">\n            <div className=\"pet-image-container\">\n              <img\n                className=\"pet-image\"\n                src={\n                  data.photos[0]?.medium || 'https://i.imgur.com/aEcJUFK.png'\n                }\n                alt=\"\"\n              />\n            </div>\n            <div>\n              <h1>{data.name}</h1>\n              <h3>Breed: {data.breeds.primary}</h3>\n              <p>Color: {data.colors.primary || 'Unknown'}</p>\n              <p>Gender: {data.gender}</p>\n              <h3>Description</h3>\n              <p>{data.description}</p>\n            </div>\n          </div>\n        </main>\n      )}\n    </div>\n  );\n};\n\nexport default PetDetailsPage;\n","import React from 'react';\n\n// import useHistory here.\nimport { useHistory } from 'react-router-dom';\n\nconst PetDetailsNotFound = () => {\n\n  // get the history object from useHistory()\n  const history = useHistory();\n\n  const goBack = () => {\n    // Go back!\n    history.goBack();\n  }\n  \n  return (\n    <main className=\"page\">\n      <h3>404: Who let the dogs out?</h3>\n      <p>Sorry, but the details for this pet have not been uploaded by the shelter yet. Check back later!</p>\n      <img\n        src=\"https://i.chzbgr.com/full/8362031616/h9EB970C5/weve-lost-our-corgination\"\n        alt=\"\"\n      />\n      <div className=\"actions-container\">\n        <button className=\"button\" onClick={goBack}>\n          Go Back\n        </button>\n      </div>\n    </main>\n  );\n};\n\nexport default PetDetailsNotFound;\n","export default __webpack_public_path__ + \"static/media/logo.c7c56d31.svg\";","import React, { useRef } from 'react';\n\n// import useHistory here.\n\nimport { useHistory } from 'react-router-dom';\n\nconst Search = () => {\n\n  // get the history object here\n  const history = useHistory();\n\n  const searchInputRef = useRef();\n\n  const onSearchHandler = (e) => {\n    e.preventDefault();\n\n    const searchQuery = new URLSearchParams({\n      name: searchInputRef.current.value\n    }).toString();\n\n    // imperatively redirect with history.push()\n    history.push('/search?' + searchQuery)\n  };\n\n  return (\n    <form onSubmit={onSearchHandler} className=\"search-form\">\n      <input type=\"text\" className=\"search\" ref={searchInputRef} />\n      <button type=\"submit\" className=\"search-button\">\n        🔎\n      </button>\n    </form>\n  );\n};\n\nexport default Search;\n","import React, { useEffect, useState } from 'react';\nimport { getPetTypes } from '../../api/petfinder';\nimport Logo from '../../assets/logo.svg';\nimport Search from '../search';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n  const [petTypes, setPetTypes] = useState([]);\n\n  useEffect(() => {\n    async function getPetTypesData() {\n      const { types } = await getPetTypes();\n      setPetTypes(types);\n    }\n\n    getPetTypesData();\n  }, []);\n\n  return (\n    <nav>\n      <div className=\"nav-logo\">\n        <img src={Logo} alt=\"Petlover\" />\n        <Search />\n      </div>\n      <ul className=\"nav-links\">\n        <li key=\"all\">\n          {/* This link should have an activeClassName and exact prop */}\n          <NavLink\n            to=\"/\"\n            className='nav-link'\n            activeClassName=\"nav-link-active\"\n            exact\n          >\n            All Pets\n          </NavLink>\n        </li>\n        {petTypes\n          ? petTypes.map((type) => (\n              <li key={type.name}>\n                {/* These links should have an activeClassName prop */}\n                <NavLink\n                  to={`/${type._links.self.href.split('/').pop()}`}\n                  key={type.name}\n                  className='nav-link'\n                  activeClassName=\"nav-link-active\"\n                >\n                  {type.name}s\n                </NavLink>{' '}\n              </li>\n            ))\n          : 'Loading...'}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import HomePage from './pages/home';\nimport SearchPage from './pages/search';\nimport PetDetailsPage from './pages/detail';\nimport PetDetailsNotFound from './pages/petDetailsNotFound';\nimport Navigation from './components/navigation';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navigation />\n        <Switch>\n          <Route path='/pet-details-not-found'>\n            <PetDetailsNotFound />\n          </Route>\n          <Route path='/search'>\n            <SearchPage />\n          </Route>\n          <Route path='/:type/:id'>\n            <PetDetailsPage />\n          </Route>\n          <Route path='/:type?'>\n            <HomePage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst { worker } = require('./mocks/browser');\nworker.start();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { rest } from 'msw';\nimport types from './data/types.json';\nimport animals from './data/animals.json';\nimport details from './data/details.json';\n\nexport const handlers = [\n  rest.get('/types', (_req, res, ctx) => {\n    return res(ctx.status(200), ctx.json(types));\n  }),\n  rest.get('/animals', (req, res, ctx) => {\n    const type = req.url.searchParams.get('type');\n    const query = req.url.searchParams.get('query');\n    let response = animals.animals;\n\n    if (type !== '') {\n      response = response.filter(\n        (animal) => animal.type.toLowerCase() === type.toLowerCase()\n      );\n    }\n    if (query !== '') {\n      response = response.filter(\n        (animal) =>\n          animal.contact.address.state\n            .toLowerCase()\n            .includes(query.toLowerCase()) ||\n          animal.name.toLowerCase().includes(query.toLowerCase())\n      );\n    }\n    return res(ctx.status(200), ctx.json(response));\n  }),\n  rest.get('/animals/:id', (req, res, ctx) => {\n    const { id } = req.params;\n    let response = details[id];\n\n    if (!response) {\n      return res(ctx.status(404));\n    }\n\n    return res(ctx.status(200), ctx.json(response));\n  })\n];\n","import { setupWorker } from 'msw';\nimport { handlers } from './handlers';\n\nexport const worker = setupWorker(...handlers);\n"],"sourceRoot":""}